<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CustomerMapper">
    <insert id="save" parameterType="pd">
        insert into customer(
            CUSTOMER_ID,
            CUSTOMER_NAME,
            PHONE,
            BPHONE,
            CROP,
            PROVINCE,
            CITY,
            DISTRICT,
            ADDRESS,
            BEIZHU,
            WEIXIN,
            QQ,
            REGISTER_DATE,
            REGISTER_NAME
        )values(
            #{CUSTOMER_ID},
            #{CUSTOMER_NAME},
            #{PHONE},
            #{BPHONE},
            #{CROP},
            #{PROVINCE},
            #{CITY},
            #{DISTRICT},
            #{ADDRESS},
            #{BEIZHU},
            #{WEIXIN},
            #{QQ},
            #{REGISTER_DATE},
            #{REGISTER_NAME}
        )
    </insert>
    
    <select id="datalistPage" parameterType="page" resultType="pd">
        select
            c.CUSTOMER_ID,
            c.CUSTOMER_NAME,
            c.PHONE,
            c.BPHONE,
            c.CROP,
            c.PROVINCE,
            c.CITY,
            c.DISTRICT,
            c.ADDRESS,
            c.BEIZHU,
            c.WEIXIN,
            c.QQ,
            c.REGISTER_DATE,
            c.REGISTER_NAME,
            a1.NAME P_NAME,
            a2.NAME C_NAME,
            a3.NAME D_NAME
        from customer c
                left join SYS_CITY a1 on a1.ID=c.PROVINCE
        left join SYS_CITY a2 on a2.ID=c.CITY
        left join SYS_CITY a3 on a3.ID=c.DISTRICT
        <where>
            <if test="pd.KEYWORD != null and pd.KEYWORD != ''"><!-- 关键词检索 -->
            and
                (
                 c.CUSTOMER_NAME LIKE CONCAT(CONCAT('%', #{pd.KEYWORD}),'%') 
                 or
                 c.REGISTER_NAME LIKE CONCAT(CONCAT('%', #{pd.KEYWORD}),'%') 
                 or
                 a1.NAME LIKE CONCAT(CONCAT('%', #{pd.KEYWORD}),'%')
                 or
                 a2.NAME LIKE CONCAT(CONCAT('%', #{pd.KEYWORD}),'%')
                 or
                 a3.NAME LIKE CONCAT(CONCAT('%', #{pd.KEYWORD}),'%')
                 or
                 c.ADDRESS LIKE CONCAT(CONCAT('%', #{pd.KEYWORD}),'%')
                )
        </if>
        </where>
    </select>
    
    <select id="findById" parameterType="pd" resultType="pd">
         select
            c.CUSTOMER_ID,
            c.CUSTOMER_NAME,
            c.PHONE,
            c.BPHONE,
            c.CROP,
            c.PROVINCE,
            c.CITY,
            c.DISTRICT,
            c.ADDRESS,
            c.BEIZHU,
            c.WEIXIN,
            c.QQ,
            c.REGISTER_DATE,
            c.REGISTER_NAME,
            a1.NAME P_NAME,
            a2.NAME C_NAME,
            a3.NAME D_NAME
        from customer c
        left join SYS_CITY a1 on a1.ID=c.PROVINCE
        left join SYS_CITY a2 on a2.ID=c.CITY
        left join SYS_CITY a3 on a3.ID=c.DISTRICT
        where c.CUSTOMER_ID=#{CUSTOMER_ID}
        ORDER BY c.REGISTER_DATE DESC
    </select>
    
    <update id="edit" parameterType="pd">
        update customer
        SET CUSTOMER_NAME=#{CUSTOMER_NAME},
            PHONE=#{PHONE},
            BPHONE=#{BPHONE},
            CROP=#{CROP},
            PROVINCE=#{PROVINCE},
            CITY=#{CITY},
            DISTRICT=#{DISTRICT},
            ADDRESS=#{ADDRESS},
            BEIZHU=#{BEIZHU},
            WEIXIN=#{WEIXIN},
            QQ=#{QQ},
            REGISTER_NAME=#{REGISTER_NAME},
            CUSTOMER_ID=CUSTOMER_ID
        where CUSTOMER_ID=#{CUSTOMER_ID}
    </update>
    
        <delete id="delete" parameterType="pd">
        delete from customer where CUSTOMER_ID=#{CUSTOMER_ID}
    </delete>
    
        <!-- 批量删除 -->
    <delete id="deleteAll" parameterType="String">
        delete from customer
        where 
            CUSTOMER_ID in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
        </foreach>
    </delete>
</mapper>